syntax = "proto3";

package chaosplatform.auth;

message AccessToken {
    string id = 1;
    string user_id = 2;
    string org_id = 3;
    string workspace_id = 4;
    bool is_personal = 5;
    string name = 6;
    string access_token = 7;
    string refresh_token = 8;
    bool revoked = 9;
    string issued_on = 10;
    string last_used_on = 11;
}

message CreateRequest {
    string user_id = 1;
    string name = 2;
}

message CreateReply {
    AccessToken token = 1;
}

message DeleteRequest {
    string id = 1;
    string user_id = 2;
}

message DeleteReply {
}

message RevokeRequest {
    string id = 1;
    string user_id = 2;
}

message RevokeReply {
}

message GetRequest {
    string id = 1;
}

message GetReply {
    AccessToken token = 1;
}

message GetByUserRequest {
    string user_id = 1;
}

message GetByUserReply {
    repeated AccessToken tokens = 1;
}

message GetByOrgRequest {
    string org_id = 1;
}

message GetByOrgReply {
    repeated AccessToken tokens = 1;
}

message GetByWorkspaceRequest {
    string workspace_id = 1;
}

message GetByWorkspaceReply {
    repeated AccessToken tokens = 1;
}

message GetByNameRequest {
    string user_id = 1;
    string name = 2;
}

message GetByNameReply {
    AccessToken token = 1;
}

message GetByJtiRequest {
    string user_id = 1;
    string jti = 2;
}

message GetByJtiReply {
    AccessToken token = 1;
}

service AuthService {
    rpc Create(CreateRequest) returns (CreateReply);
    rpc Delete(DeleteRequest) returns (DeleteReply);
    rpc Revoke(RevokeRequest) returns (RevokeReply);
    rpc Get(GetRequest) returns (GetReply);
    rpc GetByName(GetByNameRequest) returns (GetByNameReply);
    rpc GetByUser(GetByUserRequest) returns (GetByUserReply);
    rpc GetByOrg(GetByOrgRequest) returns (GetByOrgReply);
    rpc GetByWorkspace(GetByWorkspaceRequest) returns (GetByWorkspaceReply);
    rpc GetByJti(GetByJtiRequest) returns (GetByJtiReply);
}
