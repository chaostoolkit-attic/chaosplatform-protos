syntax = "proto3";

package chaosplatform.activity;

message Activity {
    string id = 1;
    string authenticated_user_id = 2;
    string access_token_id = 3;
    string user_id = 4;
    string org_id = 5;
    string workspace_id = 6;
    string experiment_id = 7;
    string execution_id = 8;
    Timestamp timestamp = 9;
    string kind = 10;
    string visibility = 11;
    string title = 12;
    string description = 13;
    Any payload = 14;
}

message RecordRequest {
    string authenticated_user_id = 1;
    string access_token_id = 2;
    string user_id = 3;
    string org_id = 4;
    string workspace_id = 5;
    string experiment_id = 6;
    string execution_id = 7;
    Timestamp timestamp = 8;
    string kind = 9;
    string visibility = 10;
    string title = 11;
    string description = 12;
    Any payload = 13;
}

message RecordReply {
    string id = 1;
}

message GetByUserRequest {
    string user_id = 1;
    uint64 limit = 2;
    uint64 offset = 3;
}

message GetByUserReply {
    repeated Activity activities = 1;
}

message GetByOrgRequest {
    string org_id = 1;
    uint64 limit = 2;
    uint64 offset = 3;
}

message GetByOrgReply {
    repeated Activity activities = 1;
}

message GetByWorkspaceRequest {
    string workspace_id = 1;
    uint64 limit = 2;
    uint64 offset = 3;
}

message GetByWorkspaceReply {
    repeated Activity activities = 1;
}

service ActivityService {
    rpc Record(RecordRequest) returns (RecordReply);
    rpc GetByUser(GetByUserRequest) returns (GetByUserReply);
    rpc GetByOrg(GetByOrgRequest) returns (GetByOrgReply);
    rpc GetByWorkspace(GetByWorkspaceRequest) returns (GetByWorkspaceReply);
}
